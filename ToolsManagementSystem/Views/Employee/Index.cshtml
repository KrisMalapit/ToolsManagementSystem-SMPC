
@*@model PagedList.IPagedList<ToolsManagementSystem.Models.Employee>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}


@if (!User.IsInRole("User")) { 

<div class="col-md-12">
    <div class="form-group">
        <i class="glyphicon glyphicon-plus"></i>@Html.ActionLink(" Create New", "Create")
    </div>
</div>
}

<div class="col-md-4 ">
</div>
<div class="col-md-4">
</div>
<div class="col-md-4">
    <div class="form-group">
        @using (Html.BeginForm())
        {
            <div class="input-group">
                <input id="SearchString" type="text" class="form-control" placeholder="Search" value="@ViewBag.SearchStr" name="searchString">
                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="glyphicon glyphicon-search"></i>
                    </button>
                    <button id="btnRefresh" onclick="refreshItems()" class="btn btn-default btn-refresh" title="Refresh" name="filter" type="button" data-toggle="dropdown" aria-expanded="false">
                        <i class="glyphicon glyphicon-refresh icon-refresh"></i>
                    </button>
                </div>
            </div>
        }

    </div>
</div>
<table class="table">
    <tr>
        <th>
            Employee ID
        </th>
        <th>
            LastName
        </th>
        <th>
            FirstName
        </th>
        <th>
            Department Name
        </th>
        <th>
            Designations
        </th>
        @if (User.IsInRole("SuperAdmin")) { 
        <th></th>
        }
    </tr>

@foreach (var item in Model) {
    <tr>
         <td>
            @Html.DisplayFor(modelItem => item.EmpId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Departments.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Designations.Name)
        </td>
       @if (User.IsInRole("SuperAdmin")) { 
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.id }) |
            @Html.ActionLink("Details", "Details", new { id=item.id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.id })
        </td>
       }
    </tr>
}

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, searchString=ViewBag.SearchStr }))


<script>
    function refreshItems() {

        setTimeout(function () {
            location.reload();
        }, 100);
    }
</script>*@


@{
    ViewBag.Title = "Employee List";
}

<style>
    tfoot input {
        width: 100%;
        padding: 3px;
        box-sizing: border-box;
    }
</style>

<script src="~/Content/scripts/moment.js"></script>

<h2>Employee</h2>

<div class="col-md-12">
    <div class="form-group">
        <i class="glyphicon glyphicon-plus"></i>@Html.ActionLink(" Create New", "Create", new { returnurl = "whIndex" })
    </div>
</div>
<table id="tbl" class="display" style="width: 100%">
    <thead>
        <tr>
            <th>EmpId</th>
            <th>LastName</th>
            <th>FirstName</th>
            <th>Departments Name</th>
            <th>Designations Name</th>

            <th style="display:none"></th>
        </tr>
        <tr>
            <th>EmpId</th>
            <th>LastName</th>
            <th>FirstName</th>
            <th>Departments Name</th>
            <th>Designations Name</th>

            <th style="display:none">ID</th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th>EmpId</th>
            <th>LastName</th>
            <th>FirstName</th>
            <th>Departments Name</th>
            <th>Designations Name</th>

            <th style="display:none">ID</th>
        </tr>
    </tfoot>
</table>

<script>



    $(function () {
        $("#datepicker").datepicker();
    });


        $('#tbl thead tr:eq(1) th').each(function () {
            var title = $(this).text();


                    $(this).html('<input type="text" placeholder="Search ' + title + '" />');



        });
        var table = $('#tbl').DataTable({
            "processing": true,
            "serverSide": true,
            "info": true,
            //"stateSave": true,
            "lengthMenu": [[50, 100, 150, -1], [50, 100, 150, "All"]],
            "ajax": {
                "url": "@Url.Action("getData", "Employee", new { noCols = 5 })",
                "type": "POST"
            },
            "columns": [
                {
                    "data": "RefNo"
                        , "orderable": true
                        , "render": function (data, type, row, meta) {
                            var $newLinkTarget = '<a href="@Url.Action("Edit")?id='
                                +
                                row['id']
                                + '">' + data + ' </a>';
                            return $newLinkTarget;
                        }
                },
                { "data": "LastName", "orderable": true },
                { "data": "FirstName", "orderable": true },
                { "data": "DepartmentsName", "orderable": true },
                { "data": "DesignationsName", "orderable": true },
                {
                    "data": "id"
                    , "orderable": true
                    , "render": function (value) {
                        if ('@User.IsInRole("SuperAdmin")' == 'True')
                        {
                            var $newLinkTarget = '<a href="@Url.Action("Details")?id=' + value + '&user=1">Details</a>';
                            return $newLinkTarget;
                        }
                        else {
                            return value;
                        }




                        }, "visible": false
                }

            ],
            "order": [[0, "asc"]]
            ,"orderCellsTop": true
        });


    //// Apply the search
    //table.columns().every(function (index) {
    //    $('#tbl thead tr:eq(1) th:eq(' + index + ') input').on('keyup change', function () {
    //        table.column($(this).parent().index() + ':visible')
    //            .search(this.value)
    //            .draw();
    //    });
    //});

    // Apply the search
    var delay = (function () {
        var timer = 0;
        return function (callback, ms) {
            clearTimeout(timer);
            timer = setTimeout(callback, ms);
        };
    })();

    $('#tbl input').on('keyup change', function (e) {
        var keyCode = e.keyCode
        if (keyCode >= 9 && keyCode <= 27) {

        } else {
            searchFunction(this);
        }
    });
    function searchFunction(e) {
        delay(function () {

            table.column($(e).parent().index() + ':visible')
            .search(e.value)
            .draw();
        }, 1000);
    }







</script>
