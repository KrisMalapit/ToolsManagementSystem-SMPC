<!--confirm modal-->

<link href="~/Content/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Content/scripts/moment.js"></script>
<script src="~/Content/scripts/bootstrap-datetimepicker.min.js"></script>

<div id="confirmModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Confirmation</h4>
            </div>

            <div class="modal-body">

                <div class="alert alert-success" id="alertbox" style="display: none">
                    <strong>Success!</strong> Transaction save.
                </div>
                <div class="alert alert-danger" id="alertbox-error" style="display: none">
                    <strong>Failed!</strong> Oops! Something went wrong .
                            <div id="statmessage"></div>
                </div>

                <p class="text-danger">
                    <p id="message" class="text-default"></p>
                    <h16 class="text-warning">Note: This cannot be reverted</h16>
                </p>
                @Html.Label("Reason")

                @Html.TextArea("Remarks", null, new { @class = "form-control", @required = "required", @minlength = "5" })

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal" id="btnDeleteProc">Proceed Delete</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!--end confirm modal-->

<div class="modal fade" id="addModal" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @*@using (Html.BeginForm("CreateSub", "Item", FormMethod.Post, new {id="frm" })) *@

            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Create Entry</h4>
                </div>
                <div class="modal-body">
                    @Html.TextBox("ItemID", (int)@ViewBag.id, new { @class = "form-control", style = "display: none;" })
                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        @Html.Label("Reference No", new { @class = "column-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("ReferenceNo", null, null, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        @Html.Label("Date Delivered", new { @class = "column-label col-md-2" })
                            <div class="col-md-4">
                                <div class='input-group date datepicker' id='DateDeliver'>
                                    <input name="DateDelivereds" id="DateDelivered" type='text' class="form-control" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("FA Card No", new { @class = "column-label col-md-2  gpe" })
                        <div class="col-md-4">
                            @Html.TextBox("SubFACardNo", null, new { @class = "form-control  gpe" })
                            @Html.ValidationMessage("SubFACardNo")
                        </div>

                    </div>
                    <div class="form-group">
@*                        @Html.Label("FA Card No", new { @class = "column-label col-md-2  gpe" })
                        <div class="col-md-4">
                            @Html.TextBox("SubFACardNo", null, new { @class = "form-control  gpe" })
                            @Html.ValidationMessage("SubFACardNo")
                        </div>*@
                                                @Html.Label("Shelf No", new { @class = "column-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("SubShelfNo", null, new { @class = "form-control" })
                        </div>
                        @Html.Label("Property No", new { @class = "column-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("SubPropertyNo", null, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @*----------------hidden-----------------*@
                        <div style="display:none">
                            @Html.Label("Description", new { @class = "column-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextBox("SubDescription", null, null, new { @class = "form-control" })
                            </div>
                        </div>
                        @*----------------endhidden-----------------*@

                                                @Html.Label("PO/PR", new { @class = "column-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("SubPO", null, new { @class = "form-control" })
                        </div>
                         @Html.Label("Model/Brand", new { @class = "column-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("SubModelType", null, new { @class = "form-control" })
                        </div>


                    </div>

                    
                         @*----------------hidden-----------------*@
                        <div style="display:none">
                        @Html.Label("Description 2", new { @class = "column-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextBox("SubDescription2", null, new { @class = "form-control" })
                            </div>
                        </div>
                        @*----------------endhidden-----------------*@
                  

                    @Html.TextBox("appid", null, new { @class = "form-control", style = "display: none;" })
                    <div class="form-group">
                                                @Html.Label("Unit of Measure", new { @class = "column-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("SubUoM", (string)@ViewBag.UOM, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        @Html.Label("Serial No", new { @class = "column-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("SubSerialNo", null, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                                                @Html.Label("Quantity", new { @class = "column-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("SubQty", (decimal)1, new { @class = "form-control", required = "required", @min = "1", @onblur="setToInt(this)"})
                        </div>
                        @Html.Label("Unit Cost", new { @class = "column-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("SubUnitCost", (decimal)0, new { @class = "form-control span4", @type = "text", @onblur="setDecimal(this)", @placeholder="0.00",@style="text-align:right"})
                            @Html.ValidationMessage("SubUnitCost")
                        </div>
                    </div>
                    <div class="form-group">
                                                @Html.Label("Tool Status", new { @class = "column-label col-md-2", required = "required" })
                        <div class="col-md-4">
                            @Html.DropDownList("SubToolStatus",
                                    new SelectList(Enum.GetValues(typeof(ToolsManagementSystem.Models.View_Model.ToolStatus)), "Serviceable"), new { @class = "form-control" })
                        </div>
                        @Html.Label("Amount", new { @class = "column-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBox("Amount", (decimal)0, new { @class = "form-control", @readonly = "readonly",@style="text-align:right" })
                        </div>
                    </div>
                    <div class="form-group">
                                                @Html.Label("Remarks", new { @class = "custom_column-label col-md-2" })
                        <div class="col-md-4 issuancetool">
                            @Html.TextArea("Notes", null, new { @class = "form-control" })
                        </div>
                        @Html.Label("Multi-Entry", new { @class = "custom_control-label col-md-2" })
                        <div class="col-md-2">
                             @*@Html.CheckBox("MultiEntry", false, new { @checked="yes"})*@
                            <input name="MultiEntry" id="MultiEntry" type="checkbox">
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-default" id="Save">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            }
        </div>

    </div>
</div>





<div id="toolbar">
    <button id="add-item" class="btn btn-default" title="Add Item">
        <i class="glyphicon glyphicon-plus"></i>
    </button>
    <button id="edit-item" class="btn btn-default" disabled="" title="Edit Item">
        <i class="glyphicon glyphicon-edit"></i>
    </button>
    <button title="Refresh" name="refresh" type="button" class="btn btn-default btn-filter" id="btnRefresh" data-toggle="dropdown"><i class="glyphicon glyphicon-refresh icon-refresh"></i></button>
    <button id="remove-item" class="btn btn-danger" disabled title="Delete">
        <i class="glyphicon glyphicon-trash"></i>
    </button>
</div>  


<table  id="table" 
    data-toggle="table"
    data-url="@Url.Action("ItemDetails", "Item", new { itemid = @ViewBag.id })"
    data-side-pagination="server" 
    data-filter-control="true"      
                        data-page-list="[5, 10, 20, 50, 100, 200]"
                        data-toolbar="#toolbar"
                        data-click-to-select="true"
                        data-show-columns="true" 
                        data-show-toggle="true"
                        data-pagination="true" 
                        data-id-field="id"
                        data-search="true"
    >
    <thead>
        @if (ViewBag.Category == "GPE")
        { 
            <tr>
                <th data-field="state" data-checkbox="true"></th>
                <th data-field="EntryType" data-sortable="true" data-halign="center"  data-filter-control="input">Entry Type</th>
                <th data-field="FACardNo" data-sortable="true" data-halign="center" data-filter-control="input">FA Card No</th>
                <th data-field="PropertyNo" data-sortable="true" data-halign="center" data-filter-control="input">Property No</th>
                <th data-field="PO" data-sortable="true" data-halign="center" data-filter-control="input">PO/PR</th>
                <th data-field="SerialNo" data-sortable="true" data-halign="center" data-filter-control="input">Serial No</th>
                <th data-field="Qty" data-sortable="true" data-halign="center" class="text-right" data-filter-control="input">Quantity</th>
                <th data-field="ModelType" data-sortable="true" data-halign="center" data-filter-control="input">Model/Brand</th>
                <th data-field="UoM" data-sortable="true" data-halign="center" data-filter-control="input">UoM</th>
                <th data-field="UnitCost" data-sortable="true" data-halign="center" class="text-right" data-filter-control="input" data-formatter="currencyFormatter">Unit Cost</th>
                <th data-field="ShelfNo" data-sortable="true" data-halign="center" data-filter-control="input">Shelf No</th>
                <th data-field="DateAdjusted" data-sortable="true" data-halign="center" class="text-right"data-visible="false">Date Adjusted</th>
                <th data-field="ToolStatus" data-sortable="true" data-halign="center" class="text-right" data-visible="false">Tool Status</th>
                <th data-field="Notes" data-sortable="true" data-halign="center" class="text-right" data-visible="false">Remarks</th>
                <th data-field="ReferenceNo" data-sortable="true" data-halign="center" class="text-right" data-visible="false">Reference No</th>
                <th data-field="DateDelivered" data-formatter="dateFormat" data-filter-control="input">Date Delivered</th>
                @*<th data-field="DateDelivered" data-formatter="dateFormat" data-filter-control="datepicker" data-filter-datepicker-options='{"autoclose":true, "clearBtn": true, "todayHighlight": true}'>Date Delivered</th>*@
            </tr>
        
        }
        else
        {
            <tr>
                <th data-field="state" data-checkbox="true"></th>
                <th data-field="EntryType" data-sortable="true" data-halign="center" data-filter-control="input">Entry Type</th>
                <th data-field="PropertyNo" data-sortable="true" data-halign="center" data-filter-control="input">Property No</th>
                <th data-field="PO" data-sortable="true" data-halign="center" data-filter-control="input">PO/PR</th>
                <th data-field="Qty" data-sortable="true" data-halign="center" class="text-right" data-filter-control="input">Quantity</th>
                <th data-field="ModelType" data-sortable="true" data-halign="center" data-filter-control="input">Model/Brand</th>
                <th data-field="UnitCost" data-sortable="true" data-halign="center" class="text-right" data-filter-control="input" data-formatter="currencyFormatter">Unit Cost</th>
                <th data-field="ShelfNo" data-sortable="true" data-halign="center" data-filter-control="input">Shelf No</th>
                <th data-field="UoM" data-sortable="true" data-halign="center" class="text-right" data-filter-control="input">UoM</th>
                <th data-field="SerialNo" data-sortable="true" data-halign="center" class="text-right" data-filter-control="input">Serial No</th>
                <th data-field="DateAdjusted" data-sortable="true" data-halign="center" class="text-right"data-visible="false">Date Added</th>
                <th data-field="ToolStatus" data-sortable="true" data-halign="center" class="text-right" data-visible="false">Tool Status</th>
                <th data-field="Notes" data-sortable="true" data-halign="center" class="text-right" data-visible="false">Remarks</th>
                <th data-field="ReferenceNo" data-sortable="true" data-halign="center" class="text-right" data-visible="false">Reference No</th>
                <th data-field="DateDelivered" data-formatter="dateFormat" data-filter-control="input">Date Delivered</th>
                
            </tr>
        
        }

    </thead>
</table>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>






<script>
    
    function currencyFormatter(value) {
        value = value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
        //return '<i class="glyphicon glyphicon-star"></i> ' + value;
        return value;
    }


    function dateFormat(value, row, index) {
        return moment(value).format('MM/DD/YYYY');
    }
    //function nameFormatter(value, row) {
    //    var text = row.ToolStatus === "Serviceable" ? 'Positive Adjustment' : 'Negative Adjustment'
    //    return text;
    //}


    function setDecimal(input) {
        num = isNaN(parseInt(input.value)) ? parseFloat(0).toFixed(2) : parseFloat(input.value).toFixed(2)
        //num = num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        input.value = num;
    }
    function setToInt(input) {
        num = isNaN(parseInt(input.value)) ? parseInt(1) : parseInt(input.value)
        input.value = num;
    }

    var selectedrow;
    var method = "";
    $itemcat = $('#Category').val()
    $table = $('#table');
    $remove = $('#remove-item')
    $edit = $('#edit-item')

    selections = [];

    $table.on('check.bs.table uncheck.bs.table ' +
    'check-all.bs.table uncheck-all.bs.table', function (e, row) {
        $remove.prop('disabled', !$table.bootstrapTable('getSelections').length);
        $edit.prop('disabled', !$table.bootstrapTable('getSelections').length);
        selections = getIdSelections(); //to get data id
    });



    function getIdSelections() {
        return $.map($table.bootstrapTable('getSelections'), function (row) {
            return row.id
        });
    }

    function generateinvno() {
        $.ajax({
            url: "@Url.Action("GetNoSeries", "Item")"
                , method: "GET"
                , dataType: 'json'
                , data: { strcode: "ADJ" }
                , success: function (responsedata) {
                    if (responsedata[0].status == "success") {
                        var lastno = parseInt(responsedata[0].text)
                        var str = "" + (parseInt(lastno) + 1)
                        var pad = responsedata[0].text
                        var ans = pad.substring(0, pad.length - str.length) + str
                        $('#ReferenceNo').val(responsedata[0].code + '-' + ans);
                    } else {
                        alert("Fail!");
                    }
                }
        });
    }
    function GetFormattedDate() {

        var currentDt = new Date();
        var mm = currentDt.getMonth() + 1;
        mm = (mm < 10) ? '0' + mm : mm
        var dd = currentDt.getDate();
        dd = (dd < 10) ? '0' + dd : dd
        var yyyy = currentDt.getFullYear();
        var date = mm + '/' + dd + '/' + yyyy;
        return date;
    }

    $(function () {


        $('#DateDeliver').datetimepicker({
            defaultDate: new Date(),
            format: 'MM/DD/YYYY'
        });

        $('#add-item').click(function () {
        
            document.getElementById('frm').reset();
            $("#SubUnitCost").val('0.00');
            $("#Amount").val('0.00');

            $("#SubPO").removeProp('readonly')
            $("#SubQty").removeProp('readonly')
            $("#SubUnitCost").removeProp('readonly')
            method = "store"
            $('#funcEdit').remove();
            if ($itemcat == "GPE") {
                $("#SubDescription").val($("#Description").val());
                $("#SubDescription2").val($("#Description2").val());
                document.getElementById("SubFACardNo").removeAttribute("required")
                $('.gpe').show()

            } else {
                document.getElementById("SubFACardNo").removeAttribute("required")
                $('.gpe').hide()
            }
            generateinvno();
            $('#DateDelivered').val(GetFormattedDate());
            $('#addModal').modal('show');
        });
        $('#edit-item').click(function () {
            method = "edit"
            $("#SubPO").prop('readonly', false)
            $("#SubQty").prop('readonly', false)
            //$("#SubSerialNo").prop('readonly', true)
            $("#SubUnitCost").prop('readonly', false)
            selectedrow = $table.bootstrapTable('getSelections');


            

            if ($itemcat == "CME") {
                $('.gpe').hide()
                document.getElementById("SubFACardNo").removeAttribute("required")
                $("#frm").append("<input id='funcEdit' type='hidden' name='_method' value='PUT'>");
                $("#appid").val(selectedrow[0].id);
                $("#SubPropertyNo").val(selectedrow[0].PropertyNo);
                $("#SubShelfNo").val(selectedrow[0].ShelfNo);
                $("#SubModelType").val(selectedrow[0].ModelType);
                $("#SubPO").val(selectedrow[0].PO);
                //$("#SubUoM").val(selectedrow[0].UoM); //10/06/2017
                $("#SubUoM").val($("#UOM").val());
                $("#SubQty").val(selectedrow[0].Qty);
                $("#SubToolStatus").val(selectedrow[0].ToolStatus).trigger('change');
                $("#SubSerialNo").val(selectedrow[0].SerialNo);
                $('#SubUnitCost').val(selectedrow[0].UnitCost);
                $("#Amount").val(selectedrow[0].Qty * selectedrow[0].UnitCost);
                $('#Notes').val(selectedrow[0].Notes);

            } else {
                $('.gpe').show()

                $("#frm").append("<input id='funcEdit' type='hidden' name='_method' value='PUT'>");
                $("#appid").val(selectedrow[0].id);
                $("#SubFACardNo").val(selectedrow[0].FACardNo);
                $("#SubPropertyNo").val(selectedrow[0].PropertyNo);
                $("#SubDescription").val(selectedrow[0].Description);
                $("#SubDescription2").val(selectedrow[0].Description2);

                $("#SubShelfNo").val(selectedrow[0].ShelfNo);
                $("#SubModelType").val(selectedrow[0].ModelType);
                $("#SubPO").val(selectedrow[0].PO);
                //$("#SubUoM").val(selectedrow[0].UoM); //10/06/2017
                $("#SubUoM").val($("#UOM").val());
                $("#SubQty").val(selectedrow[0].Qty);
                $("#SubToolStatus").val(selectedrow[0].ToolStatus);
                $("#SubSerialNo").val(selectedrow[0].SerialNo);
                $('#SubUnitCost').val(selectedrow[0].UnitCost);
                $("#Amount").val(selectedrow[0].Qty * selectedrow[0].UnitCost);
                $('#Notes').val(selectedrow[0].Notes);

            }


            var $datedelivered = moment(selectedrow[0].DateDelivered).format('MM/DD/YYYY')
            $("#ReferenceNo").val(selectedrow[0].ReferenceNo);
            $("#DateDelivered").val($datedelivered);
            $('#addModal').modal('show');
        });

        $('#Save').click(function () {
            
            var CheckBox1 = document.getElementById("MultiEntry");
            var isMulti = false;

            if ($(CheckBox1).is(":checked")) {
                isMulti = true;
            }
            else {
                isMulti = false;
            }
     

            if (method == "store") {
                $("#frm")[0].action = "@Url.Action("CreateSub", "Item", new { transtype = "non" })" + "&isMulti=" + encodeURIComponent(isMulti)
                $("#frm")[0].method = "POST";
            } else {
                $("#frm")[0].action = "@Url.Action("EditSub", "Item", new { transtype = "non" })" + "&isMulti=" + encodeURIComponent(isMulti)
                $("#frm")[0].method = "POST";
            }

        });

        $('#btnRefresh').click(function () {
            $('#table').bootstrapTable('refresh', {
                url: "@Url.Action("ItemDetails", "Item", new { itemid = @ViewBag.id })"
            });
        });

        $('#remove-item').click(function () {
            document.getElementById('message').innerHTML = "Do you want to delete all selected values?"
            $('#confirmModal').modal('show');
        });

        $('#btnDeleteProc').click(function () {
            $("#alertbox")[0].style.display = "none";
            $("#alertbox-error")[0].style.display = "none";


            if ($("#Remarks").val() == "") {
                $("#alertbox-error")[0].style.display = "block";
                document.getElementById("statmessage").innerHTML = "Reason cannot be blank.";
                return false;
            }


            var ids = getIdSelections();
            var data = '';
            var i = 0;
            var res = getIdSelections();
            jQuery.each(res, function (index, value) {
                if (data == "") {
                    data = value;
                } else {
                    data = data + "," + value;
                }
                i++

            });
            $.ajax({
                url: "@Url.Action("DeleteSub", "Item")"
                , method: "post"
                , dataType: "json"
                , data: { itemid: data, remarks: $("#Remarks").val() }
                , success: function (responseData) {
                    if (responseData.message == "success") {
                        $table.bootstrapTable('remove', {
                            field: 'id',
                            values: ids
                        });
                        $remove.prop('disabled', true);

                        $('#table').bootstrapTable('refresh', {
                            url: "@Url.Action("ItemDetails", "Item", new { itemid = @ViewBag.id })"
                        });
                        $.notify("Item/s Deleted", {
                            type: 'success', placement: {
                                align: 'center'
                            }
                        });
                        location.reload();


                    } else {
                        alert(responseData.message);
                    }
                }
            });
        });








        $("#SubUnitCost").keyup(function () {
            s = $("#SubUnitCost").val() * $("#SubQty").val();
            m = $("#SubUnitCost").val()
            num = isNaN(parseInt(s)) ? parseFloat(0).toFixed(2) : parseFloat(s).toFixed(2)
            $("#Amount").val(num);
        });



        $("#SubQty").keyup(function () {
            s = $("#SubUnitCost").val() * $("#SubQty").val();
            num = isNaN(parseInt(s)) ? parseFloat(0).toFixed(2) : parseFloat(s).toFixed(2)
            $("#Amount").val(num);

        });

        $("#SubToolStatus").select2({
            width: "100%",
            theme: "bootstrap"
        });

    })

</script>
